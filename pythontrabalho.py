import os

# Cores
RESET    = "\033[0m"
VERDE    = "\033[92m"
VERMELHO = "\033[91m"
AMARELO  = "\033[93m"
AZUL     = "\033[94m"
NEGRITO  = "\033[1m"

# Listas
livro = []
autor = []
ano = []
aluguel = []

# Fun√ß√£o para salvar em arquivo
def salvar_livros_txt():
    with open("livros.txt ", "w", encoding="utf-8") as arquivo:
        for i in range(len(livro)):
            linha = f"{livro[i]} - {autor[i]} - {ano[i]} {aluguel[i]}\n"
            arquivo.write(linha)

# Fun√ß√£o para carregar do arquivo
def carregar_livros_txt():
    if not os.path.exists("livros.txt"):
        return
    with open("livros.txt", "r", encoding="utf-8") as arquivo:
        for linha in arquivo:
            partes = linha.strip().rsplit(" - ", 2)
            if len(partes) == 3:
                nome_livro, nome_autor, restante = partes
                try:
                    ano_info, status = restante.rsplit(" ", 1)
                    livro.append(nome_livro)
                    autor.append(nome_autor)
                    ano.append(int(ano_info))
                    aluguel.append(status)
                except ValueError:
                    continue

# Limpa terminal
def limpar_tela():
    os.system('cls' if os.name == 'nt' else 'clear')

# Input de nome de livro
def nome_livro():
    while True:
        try:
            nome = input("Digite o nome do livro: ").strip 
            nome = nome.strip()
            if nome.replace(" ", "").isalpha():
                print(f"{VERDE}‚úÖ Livro '{nome}' adicionado com sucesso.{RESET}")
                return nome
            else:
                print(f"{VERMELHO}‚ùå Use apenas letras e espa√ßos.{RESET}")
        except Exception as e:
            print(f"{VERMELHO}‚ùå Erro: {e}{RESET}")

# Input de nome do autor
def nome_escritor():
    while True:
        try:
            nome_autor = input("Digite o nome do autor: ")
            nome_autor = nome_autor.strip()
            if nome_autor.replace(" ", "").isalpha():
                print(f"{VERDE}‚úÖ Autor '{nome_autor}' adicionado com sucesso.{RESET}")
                return nome_autor
            else:
                print(f"{VERMELHO}‚ùå Use apenas letras e espa√ßos.{RESET}")
        except Exception as e:
            print(f"{VERMELHO}‚ùå Erro: {e}{RESET}")

# Input do ano
def ano_lancamento():
    while True:
        try:
            ano_livro = int(input("Digite o ano de lan√ßamento: "))
            if 1800 <= ano_livro <= 2025:
                return ano_livro
            else:
                print(f"{VERMELHO}‚ùå Ano inv√°lido.{RESET}")
        except ValueError:
            print(f"{VERMELHO}‚ùå Digite um n√∫mero v√°lido.{RESET}")

# Adicionar livro
def adicionar_livro():
    nome = nome_livro()
    escritor = nome_escritor()
    ano_publicacao = ano_lancamento()
    status = "(DISPON√çVEL) "

    livro.append(nome)
    autor.append(escritor)
    ano.append(ano_publicacao)
    aluguel.append(status)

    salvar_livros_txt()
    limpar_tela()
    print(f"{VERDE}{NEGRITO}‚úÖ Livro adicionado:{RESET}")
    print(f"{AZUL}üìò {nome} - ‚úçÔ∏è  {escritor} - üìÖ {ano_publicacao} {status}{RESET}")

# Emojis num√©ricos
def numero_para_emoji(numero):
    emojis = ['0Ô∏è‚É£', '1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£']
    return ' '.join(emojis[int(digito)] for digito in str(numero))

# Listar livros
def listar_livro():
    if not livro:
        print(f"{AMARELO}‚ö†Ô∏è Nenhum livro cadastrado.{RESET}")
    else:
        limpar_tela()
        print(f"{AZUL}{NEGRITO}üìö LIVROS:{RESET}")
        for i in range(len(livro)):
            numero_emoji = numero_para_emoji(i + 1)
            print(f"{AZUL}{numero_emoji}   {livro[i]} - Autor: {autor[i]} - Ano: {ano[i]} - {aluguel[i]}{RESET}")

# Menu para escolher campo a alterar
def menu_alterar_campo(indice):
    while True:
        print(f"\n{AZUL}{NEGRITO}‚úèÔ∏è  O que deseja alterar?{RESET}")
        print(f"1Ô∏è‚É£  Nome do livro")
        print(f"2Ô∏è‚É£  Nome do autor")
        print(f"3Ô∏è‚É£  Ano de lan√ßamento")
        print(f"4Ô∏è‚É£  Alterar tudo")
        print(f"0Ô∏è‚É£  Cancelar")
        escolha = input("Escolha uma op√ß√£o: ").strip()

        if escolha == "1":
            novo_nome = nome_livro()
            livro[indice] = novo_nome
            print(f"{VERDE}‚úÖ Nome do livro alterado!{RESET}")
            break
        elif escolha == "2":
            novo_autor = nome_escritor()
            autor[indice] = novo_autor
            print(f"{VERDE}‚úÖ Nome do autor alterado!{RESET}")
            break
        elif escolha == "3":
            novo_ano = ano_lancamento()
            ano[indice] = novo_ano
            print(f"{VERDE}‚úÖ Ano de lan√ßamento alterado!{RESET}")
            break
        elif escolha == "4":
            novo_nome = nome_livro()
            novo_autor = nome_escritor()
            novo_ano = ano_lancamento()
            livro[indice] = novo_nome
            autor[indice] = novo_autor
            ano[indice] = novo_ano
            print(f"{VERDE}‚úÖ Todos os campos alterados!{RESET}")
            break
        elif escolha == "0":
            print(f"{AMARELO}‚ö†Ô∏è Altera√ß√£o cancelada.{RESET}")
            break
        else:
            print(f"{VERMELHO}‚ùå Op√ß√£o inv√°lida. Tente novamente.{RESET}")

# Alterar livro (modificado para usar menu_alterar_campo)
def alterar_livro():
    if not livro:
        print(f"{AMARELO}‚ö†Ô∏è  Nenhum livro para alterar.{RESET}")
    else:
        try:
            listar_livro()
            alterar = int(input("N√∫mero do livro para alterar: ")) - 1
            if 0 <= alterar < len(livro):
                print(f"{AZUL}üìò Atual: {livro[alterar]} - ‚úçÔ∏è  {autor[alterar]} - üìÖ {ano[alterar]}{RESET}")
                menu_alterar_campo(alterar)
                aluguel[alterar] = "(DISPON√çVEL) "
                salvar_livros_txt()
            else:
                print(f"{VERMELHO}‚ùå Posi√ß√£o inv√°lida.{RESET}")
        except ValueError:
            print(f"{VERMELHO}‚ùå N√∫mero inv√°lido.{RESET}")

# Alugar livro
def alugar():
    if not livro:
        print(f"{AMARELO}‚ö†Ô∏è  Nenhum livro cadastrado.{RESET}")
    else:
        try:
            listar_livro()
            op = int(input("N√∫mero do livro para alugar: ")) - 1
            if 0 <= op < len(livro):
                if aluguel[op] == "(INDISPON√çVEL) ":
                    print(f"{AMARELO}‚ö†Ô∏è  J√° est√° alugado.{RESET}")
                else:
                    aluguel[op] = "(INDISPON√çVEL)"
                    salvar_livros_txt()
                    print(f"{VERDE}üì¶   Aluguel de '{livro[op]}' feito com sucesso.{RESET}")
            else:
                print(f"{VERMELHO}‚ùå  Posi√ß√£o inv√°lida.{RESET}")
        except ValueError:
            print(f"{VERMELHO}‚ùå  N√∫mero inv√°lido.{RESET}")

# Devolver livro
def devolver():
    if not livro:
        print(f"{AMARELO}‚ö†Ô∏è  Nenhum livro cadastrado.{RESET}")
    else:
        try:
            listar_livro()
            posicao = int(input("N√∫mero do livro para devolver: ")) - 1
            if 0 <= posicao < len(livro):
                if aluguel[posicao] == "(INDISPON√çVEL)":
                    aluguel[posicao] = "(DISPON√çVEL)"
                    salvar_livros_txt()
                    print(f"{VERDE}‚úÖ  Livro '{livro[posicao]}' devolvido.{RESET}")
                else:
                    print(f"{AMARELO}‚ö†Ô∏è   Livro j√° dispon√≠vel.{RESET}")
            else:
                print(f"{VERMELHO}‚ùå Posi√ß√£o inv√°lida.{RESET}")
        except ValueError:
            print(f"{VERMELHO}‚ùå N√∫mero inv√°lido.{RESET}")

# Deletar livro
def deletar_livro():
    if not livro:
        print(f"{AMARELO}‚ö†Ô∏è  Nenhum livro cadastrado.{RESET}")
    else:
        try:
            listar_livro()
            posicao = int(input("N√∫mero do livro para deletar: ")) - 1
            if 0 <= posicao < len(livro):
                print(f"{VERDE}üóëÔ∏è  Livro '{livro[posicao]}' deletado.{RESET}")
                del livro[posicao]
                del autor[posicao]
                del ano[posicao]
                del aluguel[posicao]
                salvar_livros_txt()
            else:
                print(f"{VERMELHO}‚ùå Posi√ß√£o inv√°lida.{RESET}")
        except ValueError:
            print(f"{VERMELHO}‚ùå N√∫mero inv√°lido.{RESET}")

# Popular livros de exemplo
def popular_livros_exemplo():
    if livro:
        print(f"{AMARELO}‚ö†Ô∏è J√° existem livros cadastrados. Exclua-os antes de popular novamente.{RESET}")
        return

    livros_exemplo = [
        ("Dom Quixote", "Miguel de Cervantes", 1605),
        ("1984", "George Orwell", 1949),
        ("O Pequeno Pr√≠ncipe", "Antoine de Saint-Exup√©ry", 1943),
        ("Cem Anos de Solid√£o", "Gabriel Garc√≠a M√°rquez", 1967),
        ("A Revolu√ß√£o dos Bichos", "George Orwell", 1945),
        ("Orgulho e Preconceito", "Jane Austen", 1813),
        ("O Senhor dos An√©is", "J.R.R. Tolkien", 1954),
        ("Harry Potter e a Pedra Filosofal", "J.K. Rowling", 1997),
        ("O Hobbit", "J.R.R. Tolkien", 1937),
        ("A Metamorfose", "Franz Kafka", 1915)
    ]

    for nome, autor_nome, ano_pub in livros_exemplo:
        livro.append(nome)
        autor.append(autor_nome)
        ano.append(ano_pub)
        aluguel.append("(DISPON√çVEL)")

    salvar_livros_txt()
    print(f"{VERDE}‚úÖ Livros de exemplo adicionados com sucesso!{RESET}")

# Exibe menu principal
def exibir_menu():
    print(f"{AZUL}{NEGRITO}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    print("‚ïë     üìö MENU DA BIBLIOTECA  ‚ïë")
    print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
    print("1Ô∏è‚É£  Adicionar livros")
    print("2Ô∏è‚É£  Listar livros")
    print("3Ô∏è‚É£  Alterar livros")
    print("4Ô∏è‚É£  Deletar livros")
    print("5Ô∏è‚É£  Alugar livro")
    print("6Ô∏è‚É£  Devolver livro")
    print("7Ô∏è‚É£  Popular livros")
    print("0Ô∏è‚É£  Sair")
    print(f"‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê{RESET}")

# Loop principal
def main():
    try:
        limpar_tela()
        exibir_menu()
        opcao = int(input("Escolha uma op√ß√£o: "))
        limpar_tela()
        match opcao:
            case 1: adicionar_livro()
            case 2: listar_livro()
            case 3: alterar_livro()
            case 4: deletar_livro()
            case 5: alugar()
            case 6: devolver()
            case 7: popular_livros_exemplo()
            case 0:
                print(f"{AMARELO}{NEGRITO}üëã  Encerrando o sistema...{RESET}")
                return False
            case _: print(f"{VERMELHO}‚ùå Op√ß√£o inv√°lida.{RESET}")
    except ValueError:
        limpar_tela()
        print(f"{VERMELHO}‚ùå Digite uma op√ß√£o v√°lida.{RESET}")
    return True

# Executa
if __name__ == "__main__":
    carregar_livros_txt()
    while main():
        
        input(f"\n{AZUL}Pressione Enter para continuar...{RESET}")
